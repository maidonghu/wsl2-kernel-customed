name: Build kernel from kernel.org

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  LINUX_URL: https://cdn.kernel.org/pub/linux/kernel/v5.x/
  LINUX_VERSION: 5.10.102
  CONFIG_FILE: config
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: false
  TZ: America/Vancouver

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
#      env:
#        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq install build-essential flex bison dwarves libssl-dev libelf-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        wget ${LINUX_URL}linux-${LINUX_VERSION}.tar.xz
        tar xfv linux-${LINUX_VERSION}.tar.xz 
        ln -sf /workdir/linux-${LINUX_VERSION} $GITHUB_WORKSPACE/linux-${LINUX_VERSION}
        
    - name: Load custom configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE linux-${LINUX_VERSION}/.config
           
    - name: Compile the kernel
      id: compile
      run: |
        cd linux-${LINUX_VERSION}
        echo -e "$(nproc) thread compile"
        make -j $(nproc)
        echo "::set-output name=status::success"
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Upload comppied kernel
      uses: actions/upload-artifact@main
      with:
        name: kernel${{ env.FILE_DATE }}
        path: arch/x86/boot/bzImage
